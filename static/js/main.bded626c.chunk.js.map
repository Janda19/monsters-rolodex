{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monters","map","el","SearchBox","placeholder","changeHandler","type","onChange","App","state","monsters","searchField","bind","e","this","setState","target","value","filteredMonster","filter","toLowerCase","includes","fetch","then","response","json","users","catch","err","console","log","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,EAAO,SAAAC,GAEhB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,KAChF,oBAAIJ,UAAU,OAAd,SAAsBD,EAAMG,QAAQG,OACxC,4BAAIN,EAAMG,QAAQI,YCLbC,EAAa,SAAAR,GAEtB,OAAO,qBAAKC,UAAU,YAAf,SACFD,EAAMS,QAAQC,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAAkBR,QAASQ,GAAhBA,EAAGP,UCHlCQ,G,MAAY,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,cACpC,OACI,uBAAOb,UAAU,SAASc,KAAK,SAASC,SAAUF,EAAeD,YAAaA,MCkDvEI,E,kDAlDX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,SAAU,GACVC,YAAa,IAIjB,EAAKN,cAAgB,EAAKA,cAAcO,KAAnB,gBARX,E,iDAYd,SAAcC,GACVC,KAAKC,SAAS,CAACJ,YAAaE,EAAEG,OAAOC,U,oBAGzC,WAAU,IAAD,EAC2BH,KAAKL,MAA9BC,EADF,EACEA,SAAUC,EADZ,EACYA,YAEXO,EAAkBR,EAASS,QAAO,SAAAzB,GAAO,OAC3CA,EAAQG,KAAKuB,cAAcC,SAASV,EAAYS,kBAGpD,OAEI,sBAAK5B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CAAWY,YAAY,kBAAkBC,cAAeS,KAAKT,gBAE7D,cAAC,EAAD,CAAUL,QAASkB,S,+BAO/B,WAAqB,IAAD,OAEhBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,EAAKX,SAAS,CAACL,SAAUgB,OAE5BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,2B,GA5CpBC,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bded626c.chunk.js","sourcesContent":["import React from 'react'\nimport './card.style.css'\n\nexport const Card = props => {\n\n    return (\n        <div className='card-container'>\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180` }alt=\"\"/>\n            <h2 className='card'>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n        </div>\n    )\n};\n","\nimport React from 'react'\nimport  './card-list.style.css';\nimport {Card} from '../card/card.component'\nexport const CardList  =  props =>\n{\n    return <div className=\"card-list\">\n        {props.monters.map(el => <Card key={el.id} monster={el}/>)}\n\n    </div>\n}\n","import React from 'react'\nimport './search-box.style.css'\n\n\nexport const SearchBox = ({placeholder, changeHandler}) => {\n    return (\n        <input className='search' type=\"search\" onChange={changeHandler} placeholder={placeholder}/>\n    );\n}\n","import './App.css';\nimport {Component} from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            monsters: [],\n            searchField: ''\n        }\n\n\n        this.changeHandler = this.changeHandler.bind(this)\n    }\n\n\n    changeHandler(e) {\n        this.setState({searchField: e.target.value})\n    }\n\n    render() {\n        const {monsters, searchField} = this.state;\n\n        const filteredMonster = monsters.filter(monster =>\n            monster.name.toLowerCase().includes(searchField.toLowerCase())\n        );\n\n        return (\n\n            <div className='App'>\n                <h1>Monsters Rolodex</h1>\n                <SearchBox placeholder='search monsters' changeHandler={this.changeHandler}/>\n\n                <CardList monters={filteredMonster}/>\n\n            </div>\n        )\n\n    }\n\n    componentDidMount() {\n\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => {\n                this.setState({monsters: users})\n            })\n            .catch(err => console.log('there\\'s an error'))\n\n    }\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}